@model Users.Web.Models.UserViewModel

@{
    ViewBag.Title = "Edit User";
}

<h2>Edit User</h2>

<div>
    @using (Html.BeginForm("Edit", "User", new { id = Model.Id }))
    {

        <div class="form-group">
            @Html.LabelFor(model => model.Username)
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City)
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street)
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>        
        
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId)
            @Html.DropDownListFor(model => model.CategoryId, new SelectList(Enum.GetValues(typeof(Users.Web.Models.UserViewModel.Category)), "Select category"))
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>

        @Html.HiddenFor(x => x.Id);


        <div>
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
        <br />

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-danger" })
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
